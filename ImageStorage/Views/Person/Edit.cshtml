@model ImageStorage.Models.ViewModels.PersonFormViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>PersonFormViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Person.Id" />
            <input type="hidden" asp-for="Person.ImageId" />
            <div class="form-group">
                <label class="col-form-label" asp-for="Person.Name"></label>
                <input class="form-control" asp-for="Person.Name" />
            </div>
            @if (Model.Person.ImageId != null)
            {
                <div class="form-group">
                    <label class="col-form-label">Current Image</label>
                    <img src="@Url.Action("Image", "Person", new { id = Model.Person.ImageId })" alt="No Image"/>
                    <a asp-action="RemoveImage" , asp-route-id="@Model.Person.Id"><input type="button" class="btn btn-danger" value="Remove Image" /></a>
                </div>
            }
            <div class="form-group">
                <label asp-for="ImageUpload"></label>
                <input type="file" asp-for="ImageUpload" />
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
